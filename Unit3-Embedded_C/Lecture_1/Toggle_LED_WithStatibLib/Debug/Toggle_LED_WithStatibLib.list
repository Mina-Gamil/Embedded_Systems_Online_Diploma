
Toggle_LED_WithStatibLib.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000178  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002a8  080002a8  00020008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002a8  080002a8  00020008  2**0
                  CONTENTS
  4 .ARM          00000000  080002a8  080002a8  00020008  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002a8  080002a8  00020008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002a8  080002a8  000102a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002ac  080002ac  000102ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000008  20000000  080002b0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000008  080002b8  00020008  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000024  080002b8  00020024  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020008  2**0
                  CONTENTS, READONLY
 12 .debug_info   000002df  00000000  00000000  00020031  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001c5  00000000  00000000  00020310  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000068  00000000  00000000  000204d8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000040  00000000  00000000  00020540  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00000f6b  00000000  00000000  00020580  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000004d1  00000000  00000000  000214eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00003c7b  00000000  00000000  000219bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00025637  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000084  00000000  00000000  000256b4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000008 	.word	0x20000008
 800014c:	00000000 	.word	0x00000000
 8000150:	08000290 	.word	0x08000290

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	2000000c 	.word	0x2000000c
 800016c:	08000290 	.word	0x08000290

08000170 <main>:
volatile R_APB2ENR_t* APB2ENR = (volatile R_APB2ENR_t*)(RCC_APB2ENR_REG);
volatile R_CRH_t* R_CRH = (volatile R_CRH_t*) GPIOA_CRH_REG;

/********** MAIN PROGRAM **********/
int main(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
	/************* INIT IOPAEN AND MODE PIN************/
	APB2ENR->Pin.IOPAEN = 1;
 8000174:	4b09      	ldr	r3, [pc, #36]	; (800019c <main+0x2c>)
 8000176:	681a      	ldr	r2, [r3, #0]
 8000178:	7813      	ldrb	r3, [r2, #0]
 800017a:	f043 0304 	orr.w	r3, r3, #4
 800017e:	7013      	strb	r3, [r2, #0]
	R_CRH->Pin.MODE_PIN13 = 2;
 8000180:	4b07      	ldr	r3, [pc, #28]	; (80001a0 <main+0x30>)
 8000182:	681a      	ldr	r2, [r3, #0]
 8000184:	6813      	ldr	r3, [r2, #0]
 8000186:	2102      	movs	r1, #2
 8000188:	f361 5317 	bfi	r3, r1, #20, #4
 800018c:	6013      	str	r3, [r2, #0]

	/********* CALL vToggle_Led function which Implemented in Library **********/
	vToggle_Led((void*)GPIOA_ODR_REG);
 800018e:	4805      	ldr	r0, [pc, #20]	; (80001a4 <main+0x34>)
 8000190:	f000 f833 	bl	80001fa <vToggle_Led>
	return 0;
 8000194:	2300      	movs	r3, #0
}
 8000196:	4618      	mov	r0, r3
 8000198:	bd80      	pop	{r7, pc}
 800019a:	bf00      	nop
 800019c:	20000000 	.word	0x20000000
 80001a0:	20000004 	.word	0x20000004
 80001a4:	4001080c 	.word	0x4001080c

080001a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001a8:	480d      	ldr	r0, [pc, #52]	; (80001e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001aa:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80001ac:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001b0:	480c      	ldr	r0, [pc, #48]	; (80001e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80001b2:	490d      	ldr	r1, [pc, #52]	; (80001e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001b4:	4a0d      	ldr	r2, [pc, #52]	; (80001ec <LoopForever+0xe>)
  movs r3, #0
 80001b6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001b8:	e002      	b.n	80001c0 <LoopCopyDataInit>

080001ba <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001ba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001bc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001be:	3304      	adds	r3, #4

080001c0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001c0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001c2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001c4:	d3f9      	bcc.n	80001ba <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001c6:	4a0a      	ldr	r2, [pc, #40]	; (80001f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80001c8:	4c0a      	ldr	r4, [pc, #40]	; (80001f4 <LoopForever+0x16>)
  movs r3, #0
 80001ca:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001cc:	e001      	b.n	80001d2 <LoopFillZerobss>

080001ce <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001ce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001d0:	3204      	adds	r2, #4

080001d2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001d2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001d4:	d3fb      	bcc.n	80001ce <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001d6:	f000 f837 	bl	8000248 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001da:	f7ff ffc9 	bl	8000170 <main>

080001de <LoopForever>:

LoopForever:
    b LoopForever
 80001de:	e7fe      	b.n	80001de <LoopForever>
  ldr   r0, =_estack
 80001e0:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 80001e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80001e8:	20000008 	.word	0x20000008
  ldr r2, =_sidata
 80001ec:	080002b0 	.word	0x080002b0
  ldr r2, =_sbss
 80001f0:	20000008 	.word	0x20000008
  ldr r4, =_ebss
 80001f4:	20000024 	.word	0x20000024

080001f8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80001f8:	e7fe      	b.n	80001f8 <ADC1_2_IRQHandler>

080001fa <vToggle_Led>:
/* Includes ------------------------------------------------------------------*/
#include "Toggle_Static_Lib.h"

/** Functions ----------------------------------------------------------------*/
void vToggle_Led(void* GPIO)
{
 80001fa:	b480      	push	{r7}
 80001fc:	b087      	sub	sp, #28
 80001fe:	af00      	add	r7, sp, #0
 8000200:	6078      	str	r0, [r7, #4]
	volatile R_GPIOA_ODR_t* GPIOA_ODR = (volatile R_GPIOA_ODR_t*) GPIO;
 8000202:	687b      	ldr	r3, [r7, #4]
 8000204:	60fb      	str	r3, [r7, #12]
	while(1)
	{
		GPIOA_ODR->Pin.GPIOA_13 = 1;
 8000206:	68fa      	ldr	r2, [r7, #12]
 8000208:	8813      	ldrh	r3, [r2, #0]
 800020a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800020e:	8013      	strh	r3, [r2, #0]
		for(int i = 0; i < 5000; i++);
 8000210:	2300      	movs	r3, #0
 8000212:	617b      	str	r3, [r7, #20]
 8000214:	e002      	b.n	800021c <vToggle_Led+0x22>
 8000216:	697b      	ldr	r3, [r7, #20]
 8000218:	3301      	adds	r3, #1
 800021a:	617b      	str	r3, [r7, #20]
 800021c:	697b      	ldr	r3, [r7, #20]
 800021e:	f241 3287 	movw	r2, #4999	; 0x1387
 8000222:	4293      	cmp	r3, r2
 8000224:	ddf7      	ble.n	8000216 <vToggle_Led+0x1c>
		GPIOA_ODR->Pin.GPIOA_13 = 0;
 8000226:	68fa      	ldr	r2, [r7, #12]
 8000228:	8813      	ldrh	r3, [r2, #0]
 800022a:	f36f 334d 	bfc	r3, #13, #1
 800022e:	8013      	strh	r3, [r2, #0]
		for(int i = 0; i < 5000; i++);
 8000230:	2300      	movs	r3, #0
 8000232:	613b      	str	r3, [r7, #16]
 8000234:	e002      	b.n	800023c <vToggle_Led+0x42>
 8000236:	693b      	ldr	r3, [r7, #16]
 8000238:	3301      	adds	r3, #1
 800023a:	613b      	str	r3, [r7, #16]
 800023c:	693b      	ldr	r3, [r7, #16]
 800023e:	f241 3287 	movw	r2, #4999	; 0x1387
 8000242:	4293      	cmp	r3, r2
 8000244:	ddf7      	ble.n	8000236 <vToggle_Led+0x3c>
		GPIOA_ODR->Pin.GPIOA_13 = 1;
 8000246:	e7de      	b.n	8000206 <vToggle_Led+0xc>

08000248 <__libc_init_array>:
 8000248:	b570      	push	{r4, r5, r6, lr}
 800024a:	2500      	movs	r5, #0
 800024c:	4e0c      	ldr	r6, [pc, #48]	; (8000280 <__libc_init_array+0x38>)
 800024e:	4c0d      	ldr	r4, [pc, #52]	; (8000284 <__libc_init_array+0x3c>)
 8000250:	1ba4      	subs	r4, r4, r6
 8000252:	10a4      	asrs	r4, r4, #2
 8000254:	42a5      	cmp	r5, r4
 8000256:	d109      	bne.n	800026c <__libc_init_array+0x24>
 8000258:	f000 f81a 	bl	8000290 <_init>
 800025c:	2500      	movs	r5, #0
 800025e:	4e0a      	ldr	r6, [pc, #40]	; (8000288 <__libc_init_array+0x40>)
 8000260:	4c0a      	ldr	r4, [pc, #40]	; (800028c <__libc_init_array+0x44>)
 8000262:	1ba4      	subs	r4, r4, r6
 8000264:	10a4      	asrs	r4, r4, #2
 8000266:	42a5      	cmp	r5, r4
 8000268:	d105      	bne.n	8000276 <__libc_init_array+0x2e>
 800026a:	bd70      	pop	{r4, r5, r6, pc}
 800026c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000270:	4798      	blx	r3
 8000272:	3501      	adds	r5, #1
 8000274:	e7ee      	b.n	8000254 <__libc_init_array+0xc>
 8000276:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800027a:	4798      	blx	r3
 800027c:	3501      	adds	r5, #1
 800027e:	e7f2      	b.n	8000266 <__libc_init_array+0x1e>
 8000280:	080002a8 	.word	0x080002a8
 8000284:	080002a8 	.word	0x080002a8
 8000288:	080002a8 	.word	0x080002a8
 800028c:	080002ac 	.word	0x080002ac

08000290 <_init>:
 8000290:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000292:	bf00      	nop
 8000294:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000296:	bc08      	pop	{r3}
 8000298:	469e      	mov	lr, r3
 800029a:	4770      	bx	lr

0800029c <_fini>:
 800029c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800029e:	bf00      	nop
 80002a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002a2:	bc08      	pop	{r3}
 80002a4:	469e      	mov	lr, r3
 80002a6:	4770      	bx	lr

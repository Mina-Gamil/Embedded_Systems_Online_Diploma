
Unit7_Seven_Segment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000015e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001b2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001e4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000220  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000062c  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000565  00000000  00000000  00000874  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000265  00000000  00000000  00000dd9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00001040  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002f1  00000000  00000000  00001094  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000145  00000000  00000000  00001385  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  000014ca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 59 00 	call	0xb2	; 0xb2 <main>
  64:	0c 94 ad 00 	jmp	0x15a	; 0x15a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <wait>:

#include <stdio.h>


void wait(uint32_t time)
{
  6c:	cf 92       	push	r12
  6e:	df 92       	push	r13
  70:	ef 92       	push	r14
  72:	ff 92       	push	r15
  74:	0f 93       	push	r16
  76:	1f 93       	push	r17
  78:	6b 01       	movw	r12, r22
  7a:	7c 01       	movw	r14, r24
	for (int i = 0; i < time * 2000; i++);
  7c:	e0 e0       	ldi	r30, 0x00	; 0
  7e:	f0 e0       	ldi	r31, 0x00	; 0
  80:	01 c0       	rjmp	.+2      	; 0x84 <wait+0x18>
  82:	31 96       	adiw	r30, 0x01	; 1
  84:	a0 ed       	ldi	r26, 0xD0	; 208
  86:	b7 e0       	ldi	r27, 0x07	; 7
  88:	a7 01       	movw	r20, r14
  8a:	96 01       	movw	r18, r12
  8c:	0e 94 93 00 	call	0x126	; 0x126 <__muluhisi3>
  90:	8f 01       	movw	r16, r30
  92:	0f 2e       	mov	r0, r31
  94:	00 0c       	add	r0, r0
  96:	22 0b       	sbc	r18, r18
  98:	33 0b       	sbc	r19, r19
  9a:	06 17       	cp	r16, r22
  9c:	17 07       	cpc	r17, r23
  9e:	28 07       	cpc	r18, r24
  a0:	39 07       	cpc	r19, r25
  a2:	78 f3       	brcs	.-34     	; 0x82 <wait+0x16>
}
  a4:	1f 91       	pop	r17
  a6:	0f 91       	pop	r16
  a8:	ff 90       	pop	r15
  aa:	ef 90       	pop	r14
  ac:	df 90       	pop	r13
  ae:	cf 90       	pop	r12
  b0:	08 95       	ret

000000b2 <main>:



int main(void)
{
    DDRC = 0xff;
  b2:	8f ef       	ldi	r24, 0xFF	; 255
  b4:	84 bb       	out	0x14, r24	; 20
	
    while (1) 
    {
		for (int i = 0; i < 10; i++)
  b6:	00 e0       	ldi	r16, 0x00	; 0
  b8:	10 e0       	ldi	r17, 0x00	; 0
  ba:	31 c0       	rjmp	.+98     	; 0x11e <main+0x6c>
		{
			for (int j = 0; j < 10; j++)
			{
				for (int c = 0; c < 10; c++)
				{
					PORTC = 0b0111 | (j << 4);
  bc:	ce 01       	movw	r24, r28
  be:	82 95       	swap	r24
  c0:	92 95       	swap	r25
  c2:	90 7f       	andi	r25, 0xF0	; 240
  c4:	98 27       	eor	r25, r24
  c6:	80 7f       	andi	r24, 0xF0	; 240
  c8:	98 27       	eor	r25, r24
  ca:	87 60       	ori	r24, 0x07	; 7
  cc:	85 bb       	out	0x15, r24	; 21
					wait(1);
  ce:	61 e0       	ldi	r22, 0x01	; 1
  d0:	70 e0       	ldi	r23, 0x00	; 0
  d2:	80 e0       	ldi	r24, 0x00	; 0
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	0e 94 36 00 	call	0x6c	; 0x6c <wait>
					PORTC = 0b1011 | (i << 4);
  da:	c8 01       	movw	r24, r16
  dc:	82 95       	swap	r24
  de:	92 95       	swap	r25
  e0:	90 7f       	andi	r25, 0xF0	; 240
  e2:	98 27       	eor	r25, r24
  e4:	80 7f       	andi	r24, 0xF0	; 240
  e6:	98 27       	eor	r25, r24
  e8:	8b 60       	ori	r24, 0x0B	; 11
  ea:	85 bb       	out	0x15, r24	; 21
					wait(1);
  ec:	61 e0       	ldi	r22, 0x01	; 1
  ee:	70 e0       	ldi	r23, 0x00	; 0
  f0:	80 e0       	ldi	r24, 0x00	; 0
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	0e 94 36 00 	call	0x6c	; 0x6c <wait>
    {
		for (int i = 0; i < 10; i++)
		{
			for (int j = 0; j < 10; j++)
			{
				for (int c = 0; c < 10; c++)
  f8:	8f ef       	ldi	r24, 0xFF	; 255
  fa:	e8 1a       	sub	r14, r24
  fc:	f8 0a       	sbc	r15, r24
  fe:	02 c0       	rjmp	.+4      	; 0x104 <main+0x52>
 100:	e1 2c       	mov	r14, r1
 102:	f1 2c       	mov	r15, r1
 104:	8a e0       	ldi	r24, 0x0A	; 10
 106:	e8 16       	cp	r14, r24
 108:	f1 04       	cpc	r15, r1
 10a:	c4 f2       	brlt	.-80     	; 0xbc <main+0xa>
	
    while (1) 
    {
		for (int i = 0; i < 10; i++)
		{
			for (int j = 0; j < 10; j++)
 10c:	21 96       	adiw	r28, 0x01	; 1
 10e:	02 c0       	rjmp	.+4      	; 0x114 <main+0x62>
 110:	c0 e0       	ldi	r28, 0x00	; 0
 112:	d0 e0       	ldi	r29, 0x00	; 0
 114:	ca 30       	cpi	r28, 0x0A	; 10
 116:	d1 05       	cpc	r29, r1
 118:	9c f3       	brlt	.-26     	; 0x100 <main+0x4e>
{
    DDRC = 0xff;
	
    while (1) 
    {
		for (int i = 0; i < 10; i++)
 11a:	0f 5f       	subi	r16, 0xFF	; 255
 11c:	1f 4f       	sbci	r17, 0xFF	; 255
 11e:	0a 30       	cpi	r16, 0x0A	; 10
 120:	11 05       	cpc	r17, r1
 122:	b4 f3       	brlt	.-20     	; 0x110 <main+0x5e>
 124:	c8 cf       	rjmp	.-112    	; 0xb6 <main+0x4>

00000126 <__muluhisi3>:
 126:	0e 94 9e 00 	call	0x13c	; 0x13c <__umulhisi3>
 12a:	a5 9f       	mul	r26, r21
 12c:	90 0d       	add	r25, r0
 12e:	b4 9f       	mul	r27, r20
 130:	90 0d       	add	r25, r0
 132:	a4 9f       	mul	r26, r20
 134:	80 0d       	add	r24, r0
 136:	91 1d       	adc	r25, r1
 138:	11 24       	eor	r1, r1
 13a:	08 95       	ret

0000013c <__umulhisi3>:
 13c:	a2 9f       	mul	r26, r18
 13e:	b0 01       	movw	r22, r0
 140:	b3 9f       	mul	r27, r19
 142:	c0 01       	movw	r24, r0
 144:	a3 9f       	mul	r26, r19
 146:	70 0d       	add	r23, r0
 148:	81 1d       	adc	r24, r1
 14a:	11 24       	eor	r1, r1
 14c:	91 1d       	adc	r25, r1
 14e:	b2 9f       	mul	r27, r18
 150:	70 0d       	add	r23, r0
 152:	81 1d       	adc	r24, r1
 154:	11 24       	eor	r1, r1
 156:	91 1d       	adc	r25, r1
 158:	08 95       	ret

0000015a <_exit>:
 15a:	f8 94       	cli

0000015c <__stop_program>:
 15c:	ff cf       	rjmp	.-2      	; 0x15c <__stop_program>
